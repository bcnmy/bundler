apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.relayer.name }}{{ .Values.index }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.relayer.name }}
    component: {{ .Values.relayer.name }}{{ .Values.index }}
    {{- include "relayers-service.labels" $ | nindent 4 }}
  {{- if .Values.datadog.enable }}
    {{- include "datadog.datatrace" $ | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ .Values.name }}
  replicas: {{ .Values.relayer.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.relayer.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.relayer.name }}
      {{- if .Values.datadog.enable }}
        {{- include "datadog.datatrace" $ | nindent 8 }}
        {{- include "datadog.datatrace-admission" $ | nindent 8 }}
      {{- end }}
      annotations:
      {{- if .Values.datadog.enable }}
        admission.us5.datadoghq.com/js-lib.version: {{ .Values.datadog.lib_version }}
      {{- end }}
        releaseTime: {{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }} 
    spec:
      {{- if .Values.affinity }}
      affinity:
        {{- if .Values.affinity.antiAffinity }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.name }}
              topologyKey:  {{ .Values.affinity.antiAffinity.topologyKey }}
            weight: {{ .Values.affinity.antiAffinity.weight }}
        {{- end }} 
        {{- if .Values.affinity.affinityTolerations }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.affinity.affinityTolerations.key }}
                operator: In
                values:
                - {{ .Values.affinity.affinityTolerations.values }}
      tolerations:
      - effect: NoSchedule
        key: {{ .Values.affinity.affinityTolerations.key }}
        operator: Equal
        value: {{ .Values.affinity.affinityTolerations.values }}
      {{- end }} 
      {{- end }}
      containers:
      - name: {{ .Values.relayer.name }}{{ .Values.index }}
        image: {{ .Values.relayer.image }}
        ports:
        - containerPort: {{ .Values.relayer.port }}
        envFrom:
          {{- if .Values.datadog.enable }}
          - configMapRef:
              name: {{ .Values.name }}-dd-configmap
          {{- end }}
          - secretRef:
              name: {{ .Values.relayer.name }}-passphrase
        volumeMounts:
          - mountPath: "/relayer-node/config.json.enc"
            name: secret
            subPath: "config.json.enc"
      {{- if .Values.datadog.enable }}
          - mountPath: /var/run/datadog
            name: apmsocketpath
      {{- end }}
      {{- if .Values.probes }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probes.healthEndpoint }}
            port: {{ .Values.port }}
{{ toYaml .Values.probes.liveness | indent 10 }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probes.healthEndpoint }}
            port: {{ .Values.port }}
{{ toYaml .Values.probes.readiness | indent 10 }}
      {{- end }}
        resources:
          requests:
            memory: {{ .Values.relayer.resource.requests.memory }}
            cpu: {{ .Values.relayer.resource.requests.cpu }}
          limits:
            memory: {{ .Values.relayer.resource.limits.memory }}
            cpu: {{ .Values.relayer.resource.limits.cpu }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.relayer.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.relayer.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: secret
        secret:
          secretName: {{ .Values.name }}{{ .Values.index }}
      {{- if .Values.datadog.enable }}
      - hostPath:
          path: /var/run/datadog/
        name: apmsocketpath
      {{- end }} 
